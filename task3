#senders_code
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#SENDER"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import socket"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "cap= cv2.VideoCapture(0)\n",
    "s= socket.socket()\n",
    "s.bind((socket.gethostbyname(socket.gethostname()),2209))\n",
    "s.listen(10)\n",
    "p , addr= s.accept()\n",
    "while True:\n",
    "    i= p.recv(100000)\n",
    "    j= np.frombuffer(i, np.uint8)\n",
    "    k= cv2.imdecode(j, cv2.IMREAD_COLOR)\n",
    "    x, y= cap.read()\n",
    "    image= cv2.resize(y,(150,300),3)\n",
    "    if type(k) is type(None):\n",
    "        pass\n",
    "    else:\n",
    "        k[:300,:150]= image\n",
    "        cv2.imshow('Shubh',k)\n",
    "        if cv2.waitKey(10)== 13:\n",
    "            break\n",
    "    end= cv2.imencode('.jpg', y)[1].tobytes()\n",
    "    p.sendall(end)\n",
    "cv2.destroyAllWindows()\n",
    "cam.release()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}



#recievers_code
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#RECIEVER"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import socket"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "cap= cv2.VideoCapture(1)\n",
    "s= socket.socket()\n",
    "s.connect((socket.gethostbyname(socket.gethostname()),2209))\n",
    "while True:\n",
    "    x,y = cap.read()\n",
    "    w = cv2.resize(y,(600,400))\n",
    "    e = cv2.imencode(\".jpg\", w)[1].tobytes()\n",
    "    s.sendall(e)\n",
    "    i= s.recv(100000)\n",
    "    j= np.frombuffer(i, np.uint8)\n",
    "    k= cv2.imdecode(j, cv2.IMREAD_COLOR)\n",
    "    image= cv2.resize(y,(150,300),3)\n",
    "    if type(k) is type(None):\n",
    "        pass\n",
    "    else:\n",
    "        k[:300,:150]= image\n",
    "        cv2.imshow('Manhit',k)\n",
    "        if cv2.waitKey(10)== 13:\n",
    "            break\n",
    "cv2.destroyAllWindows()\n",
    "cam.release()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}

